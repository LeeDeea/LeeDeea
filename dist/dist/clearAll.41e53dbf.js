const o={data(){return{stats:new this.$stats}},setup(){let e=ref(),t=ref(),s=ref(),i=ref(),n=ref(),l=ref();return{scene:e,render:t,animations:s,scenes:i,renders:n,dom:l}},methods:{initStats(){let e=document.getElementsByClassName("count");if(!e[0]&&this.dom){e=[];let t=document.createElement("div");t.className="count",e.push(t),this.dom.appendChild(e[0])}this.stats.showPanel(0),this.stats.domElement.style.position="absolute",this.stats.domElement.style.left="0rem",this.stats.domElement.style.top="0rem",e[0].appendChild(this.stats.dom)},removeScene(e){if(e.length>0){let t=this;e.forEach(s=>{t.removeScene(s)})}else{let t=e.children.filter(s=>s);t.forEach(s=>{s.children.length?this.removeScene(s):(s.geometry&&(s.geometry.dispose(),s.material.dispose()),s.clear(),s=null)}),e.clear(),t=null}},removeRender(e){e.renderLists.dispose(),e.dispose(),e.forceContextLoss(),e.domElement=null,e.content=null,e=null},remove(){this.$nextTick(e=>{if(this.scene?(this.removeScene(this.scene),this.scene=null):this.scenes&&(this.removeScene(this.scenes),this.scenes=null),this.render?(this.removeRender(this.render),this.render=null):this.renders&&(this.renders.forEach(t=>{this.removeRender(t)}),this.renders=null),this.animations&&(cancelAnimationFrame(this.animations),this.animations=null),this.$three.Cache.clear(),this.dom)for(;this.dom.hasChildNodes();)this.dom.removeChild(this.dom.firstChild);console.log("scene/render/animations - clear done")})}}};export{o as _};
